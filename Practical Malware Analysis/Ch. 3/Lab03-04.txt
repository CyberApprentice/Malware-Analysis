date 9-26-18
Contents: one executable: "Lab03-04.exe"

Format:

x) Question.

- Tool used
$ answer to question

information extracted

---------------------------------------------------------

1) Imports and strings?
    -pestudio    
$ 1 imported library (kernel32.dll) using one function (ExitProcess)
$ Found strings of interest: ntdll, admin, AppData, advapi32, vmx32to64.exe, CONNECT %s:%i HTTP/1.0,  www.practicalmalwareanalysis.com, 
                            SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders, Software\Microsoft\Active Setup\Installed Components\,
                            SOFTWARE\Microsoft\Windows\CurrentVersion\Run, and SOFTWARE\Classes\http\shell\open\commandV.

2) Host-based indicators?
$ www.practicalmalwareanalysis.com

3) Network-based indicators?
$ CONNECT %s:%i HTTP/1.0

Other:
$ This executable is packed clearly by the number of imports, functions, and after running it through PEiD, it states, "PEncrypt 3.1 Final -> junkcode"

Conclusion: Not much to see from the executable since it is packed using a packer along the lines of, "PEncrypt 3.1 Final -> junkcode". 
From the strings, we see various directories referenced, .dll mentioned that were not seen in the imports (further proving it's packed), 
a networking and host signature, user account admin, and vmx32to64.exe. From my understanding, the vmx*.exe is for converting VMware (or other type 2
virtualization software), from 32bit to 64bit. But with further google searching, is used for other malicious purposes.




---------------------------------------------------------
Answer/Lessons Learned:

I undermined the string, "WinVMX32", and makes it worst because it's similar to "vmx32to64.exe".
I didn't perform the basic dynamic analysis because I was unaware of the tools that could be used
since I stopped around chapter 12 to go back and go through the exercises again. From now on, I will
consider the tools that can be utilized in the preceding exercises. The rest is simply the book's answer 
with me following along.

