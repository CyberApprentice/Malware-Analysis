date 9-25-18
Contents: one executable: "Lab01-04.exe"

Format:

x) Question.

- Tool used
$ answer to question

information extracted

---------------------------------------------------------

1) Is it packed?

- Load in PEiD & PEview

PEiD: not packed
PEview: Looked for extra sections like "UPX" but none found so conclusion: not packed.

2) Date/time of complied

- Load into pestudio

Pestudio: Fri Aug 30 17:26:59 2019

3) Imports?

- PE studio

Libraries: kernel32.dll (16 functions), advapi32.dll (3), and msvcrt.dll (15)
Noteable imports: 
    1. 3 deprecated functions:
        - WinExec from kernel32.dll
        - _snprintf from msvcrt.dll
        - _controlfp from msvcrt.dll
    2. CreateFile
    3. MoveFile
    4. WinExec
    5. CreateRemoteThread
    6. OpenProcess
    7. OpenProcessToken
    8. LookupPrivileges
    9. AdjustTokenPrivileges

4) What story can you infer from these imports?

$ Elevates privileges creates an administrative level process

5) file size?

- PE Studio

16384 BYTES

5) Host-based or network-based indicators?

- PE Studio

Host-based:
    ~ http://www.practicalmalwareanalysis.com/updater.exe

Network-based:
    ~ N/A

6)  Resource section
    - PE Studio
One resource that's an executable with an md5 hash

    - Resource Hacker
One resource that shows a hex dump of the resource

    - PEview
Under "SECTION .rsrc", there's one resource and it's the sme as resource view; a hex dump

--------------------------------------------------------------------------------------------------
Answer:

The import advapi32.dll I neglected since the libraies didn't seem threatening but the overall
message it conveys is that it "does something with permissions".
I also neglected the resource functions in kernel32.dll which would of gave me a better answer
to what the program does; "loads data from the resource section...writes a file to disk...and 
executes a file on the disk".
Lastly, I neglected the system32 directory being reference as it's creating a file within that
directory through string analysis, "\system32\wupdmgr.exe".

A huge oversight on my part is not knowing what to do with the information found through resource
hacker. I knew the one resource was a binary but didn't know what that meant. This actually meant
the executable, "Lab01-04.exe", had another executable within it. This is also further proven with
the string at the beginning of the hex dump, "This program cannot be run in DOS mode". To extract 
it via resource hacker, you simply go to the "Action" tab and select "Save Resource to a BIN file".

After extraction, and loading it into pestudio, I fine the networking component that was missing
previously, urlmon.dll, and similar strings and functions.


